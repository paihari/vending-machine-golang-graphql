# GraphQL schema example
#
# https://gqlgen.com/getting-started/

scalar JSON

type Federal {
  id: ID!
  uuid: String!
  name: String!
  fullName: String!
  createdAt: String!
  createdBy: String!
  updatedAt: String!
  updatedBy: String!

}

input NewFederal {
  name: String!
  fullName: String!
}

type CloudProvider {
  id: ID!
  uuid: String!
  name: String!
  fullName: String!
  createdAt: String!
  createdBy: String!
  updatedAt: String!
  updatedBy: String!

}

input NewCloudProvider {
  name: String!
  fullName: String!
}

type CloudEstate {
  id: ID!
  uuid: String!
  name: String!
  description: String!
  federal: String!
  cloudProvider: String!
  federalEmailAddress: String!
  cloudEstateCid: String!
  createdAt: String!
  createdBy: String!
  updatedAt: String!
  updatedBy: String!
}

input NewCloudEstate {
  name: String!
  description: String!
  federal: String!
  cloudProvider: String!
  federalEmailAddress: String!
  cloudEstateCid: String!
}


type CloudEstatePolicy {
  id: ID!
  uuid: String!
  name: String!
  description: String!
  cloudEstate: String!
  policyType: String!
  policyCid: String!
  policyJson: JSON!
  createdAt: String!
  createdBy: String!
  updatedAt: String!
  updatedBy: String!

}

input NewCloudEstatePolicyWithCid {
  name: String!
  description: String!
  cloudEstate: String!
  policyType: String!
  policyCid: String!
}

input NewCloudEstatePolicyWithJson {
  name: String!
  description: String!
  cloudEstate: String!
  policyType: String!
  policyJson: JSON!
}







type Resident {
  id: ID!
  name: String!
  description: String!
  purchaseOrderId: String!
  emailAddress: String!
  client: String!
  cloudProvider: String!
  residentCid: String!
  rootCid: String!
  class: String!
  stage: String!
  createdAt: String!
  createdBy: String!
  updatedAt: String!
  updatedBy: String!
}

input NewResident {
  name: String!
  description: String!
  purchaseOrderId: String!
  emailAddress: String!
  clientName: String!
  cloudProviderName: String!
  className: String!
  stageName: String!
}


type Class {
  id: ID!
  name: String!
  description: String!

}

type Stage {
  id: ID!
  name: String!
  description: String!
}

type Client {
  id: ID!
  name: String!
  fullName: String!
}


type Query {
  
  federals: [Federal!]!
  federalByUUID(uuid: String!): Federal
  federalByName(name: String!): Federal

  
  cloudProviders: [CloudProvider!]! 
  cloudProviderByUUID(uuid: String!): CloudProvider
  cloudProviderByName(name: String!): CloudProvider


  cloudEstates: [CloudEstate!]! 
  cloudEstateByUUID(uuid: String!): CloudEstate
  cloudEstateByName(name: String!): CloudEstate


  cloudEstatePolicys: [CloudEstatePolicy!]! 

  residents: [Resident!]!
}

type Mutation {
  createFederal(input: NewFederal!): Federal!
  createCloudProvider(input: NewCloudProvider!): CloudProvider!
  createCloudEstate(input: NewCloudEstate!): CloudEstate!
  createCloudEstatePolicyWithCid(input: NewCloudEstatePolicyWithCid!): CloudEstatePolicy!
  createCloudEstatePolicyWithJson(input: NewCloudEstatePolicyWithJson!): CloudEstatePolicy!

  createResident(input: NewResident!): Resident!
  

}
